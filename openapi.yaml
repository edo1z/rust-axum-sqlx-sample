openapi: 3.0.1
info:
  title: Rust Axum+SQLx Sample
  description: ''
  version: 0.0.1
servers:
  - url: 'http://localhost:8085'
schemes:
  - http
produces:
  - application/json
tags:
  - name: user
  - name: category
  - name: post
paths:
  /users:
    get:
      tags:
        - user
      summary: get 10 users
      operationId: get_users
      parameters:
        - name: name
          in: query
          description: user name
          required: false
          type: string
      responses:
        '200':
          description: return users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user/User'
  '/users/view/{userId}':
    get:
      tags:
        - user
      summary: view user
      operationId: view_users
      parameters:
        - name: userId
          in: path
          description: user id
          required: true
          type: integer
      responses:
        '200':
          description: return users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user/User'
  /users/add:
    post:
      tags:
        - user
      summary: add user
      operationId: add_user
      requestBody:
        description: user info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user/NewUser'
      responses:
        '200':
          description: return userId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user/UserId'
  /users/edit/img/prof:
    post:
      tags:
        - user
      summary: upload profile image
      operationId: edit_user_image_profile
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/user/ProfImg'
      responses:
        '200':
          description: return userId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user/ImgUrl'
  /categories:
    get:
      tags:
        - category
      summary: get 10 categories
      operationId: get_categores
      parameters:
        - name: name
          in: query
          description: category name
          required: false
          type: string
      responses:
        '200':
          description: return categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category/Category'
  /categories/add:
    post:
      tags:
        - category
      summary: add category
      operationId: add_category
      requestBody:
        description: category info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category/CreateCategory'
      responses:
        '200':
          description: return categoryId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category/CategoryId'
  /posts:
    get:
      tags:
        - post
      summary: get 10 posts
      operationId: get_posts
      parameters:
        - name: title
          in: query
          description: post title
          required: false
          type: string
      responses:
        '200':
          description: return posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/post/Post'
  /posts/add:
    post:
      tags:
        - post
      summary: add post
      operationId: add_post
      requestBody:
        description: post info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post/CreatePost'
      responses:
        '200':
          description: return postId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post/PostId'
components:
  schemas:
    user:
      User:
        type: object
        properties:
          id:
            required: true
            type: integer
            format: int32
          name:
            required: true
            type: string
          msg:
            required: false
            type: string
          age:
            required: false
            type: integer
            format: int16
      NewUser:
        required:
          - name
        type: object
        properties:
          name:
            type: string
          msg:
            type: string
          age:
            type: integer
            format: int16
      UserId:
        type: object
        properties:
          id:
            type: integer
            format: int32
      ProfImg:
        type: object
        properties:
          user_id:
            required: true
            type: integer
            format: int32
          prof_img:
            required: true
            type: string
            format: binary
      ImgUrl:
        type: object
        properties:
          url:
            type: string
    category:
      Category:
        type: object
        properties:
          id:
            type: integer
            format: int32
          name:
            type: string
      CreateCategory:
        required:
          - name
        type: object
        properties:
          name:
            type: string
      CategoryId:
        type: object
        properties:
          id:
            type: integer
            format: int32
    post:
      Post:
        type: object
        properties:
          id:
            type: integer
            format: int32
          user_id:
            type: integer
            format: int32
          category_id:
            type: integer
            format: int32
          title:
            type: string
          content:
            type: string
      CreatePost:
        required:
          - user_id
          - category_id
          - title
        type: object
        properties:
          user_id:
            type: integer
            format: int32
          category_id:
            type: integer
            format: int32
          title:
            type: string
          content:
            type: string
      PostId:
        type: object
        properties:
          id:
            type: integer
            format: int32
